user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;

    keepalive_timeout  65;

    gzip on;

    server {
        listen       80;
        server_name  localhost;

        # listen              443 ssl;
        # ssl_certificate     /cert.pem;
        # ssl_certificate_key /key.pem;

        gzip_static always;
        # All browsers that are compatible with Neuroglancer support gzip encoding
        gunzip      off;

        location / {
            root   /neuroglancer;
            index  index.html;
        }

        location /precomputed {
            root   /;

            # Allow instances of Neuroglancer hosted on other servers to use
            # the pre-computed data
            add_header 'Access-Control-Allow-Origin' '*';
            include /etc/nginx/ng.conf;
            
            error_page 404 = @redirect;
            
            # return 301 $request_uri;
        }

        location /precomputed2 {

            root   /;

            # Allow instances of Neuroglancer hosted on other servers to use
            # the pre-computed data
            add_header 'Access-Control-Allow-Origin' '*';
            include /etc/nginx/ng.conf;
        }

        location @redirect {
            rewrite ^/precomputed/(.*)$ /precomputed2/$1 last;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
